{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "app1vmName": {
            "type": "string",
            "defaultValue": "app1vm",
            "metadata": {
                "description": "The name of the VM in the first spoke."
            }
        },
        "app2vmName": {
            "type": "string",
            "defaultValue": "app2vm",
            "metadata": {
                "description": "The name of the VM in the second spoke."
            }
        },
        "VmSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "secureString",
            "metadata": {
                "description": "Password for the Virtual Machine. The password must be at least 12 characters long and have lower case, upper characters, digit and a special character (Regex match)"
            }
        },
        "cloudngfwName": {
            "type": "string",
            "defaultValue": "pancloudngfw",
            "metadata": {
                "description": "The name of your Palo Alto Cloud next-gen firewall."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "hubVNetName": {
            "type": "string",
            "defaultValue": "hub-VNet",
            "metadata": {
                "description": "Name of the cloudngfw hub VNET"
            }
        },
        "app1VNetName": {
            "type": "string",
            "defaultValue": "app1-VNet",
            "metadata": {
                "description": "Name of the app1 spoke VNET"
            }
        },
        "app2VNetName": {
            "type": "string",
            "defaultValue": "app2-VNet",
            "metadata": {
                "description": "Name of the app2 spoke VNET"
            }
        },
        "app1SubnetName": {
            "type": "string",
            "defaultValue": "app1-subnet",
            "metadata": {
                "description": "Name of the subnet for app1"
            }
        },
        "app2SubnetName": {
            "type": "string",
            "defaultValue": "app2-subnet",
            "metadata": {
                "description": "Name of the subnet for app2"
            }
        },
        "bastionHostName": {
            "type": "string",
            "defaultValue": "hubVNetbastion",
            "metadata": {
                "description": "Name of Azure Bastion resource"
            }
        },
        "scriptUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/davidokeyode/azure-offensive/master/custom-script-extensions/azure_powershell_install.ps1",
            "metadata": {
                "description": "Custom script extension PowerShell script to run post-installation"
            }
        }
    },
    "variables": {
        "hubVNetAddressPrefix": "10.10.0.0/16",
        "app1VNetAddressPrefix": "10.20.0.0/16",
        "app2VNetAddressPrefix": "10.30.0.0/16",
        "bastionSubnetName": "AzureBastionSubnet",
        "cloudngfwUntrustedSubnetName": "cloudngfw-untrusted-subnet",
        "cloudngfwTrustedSubnetName": "cloudngfw-trusted-subnet",
        "app1SubnetAddressPrefix": "10.20.1.0/24",
        "app2SubnetAddressPrefix": "10.30.1.0/24",
        "cloudngfwTrustedSubnetAddressPrefix": "10.10.1.0/24",
        "cloudngfwUntrustedSubnetAddressPrefix": "10.10.2.0/24",
        "bastionSubnetAddressPrefix": "10.10.10.0/24",
        "bastionpublicIpAddressName": "[format('{0}-pip', parameters('bastionHostName'))]",
        "cloudngfwpublicIpAddressName": "[format('{0}-pip', parameters('cloudngfwName'))]",
        "cloudngfwNATpublicIpAddressName": "[format('{0}-nat-pip', parameters('cloudngfwName'))]",
        "cloudngfwUntrustedSubnetNSG": "cloudngfw-untrusted-subnet-nsg",
        "cloudngfwTrustedSubnetNSG": "cloudngfw-trusted-subnet-nsg",
        "cloudngfwRuleStackName": "cloudngfw-rulestack",
        "app1nicname": "[concat(parameters('app1vmName'),'NetInt')]",
        "app2nicname": "[concat(parameters('app2vmName'),'NetInt')]",
        "app1SubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('app1VNetName'), parameters('app1SubnetName'))]",
        "app2SubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('app2VNetName'), parameters('app2SubnetName'))]",
        "bastionSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVNetName'), variables('bastionSubnetName'))]",
        "hubvnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVNetName'))]",
        "cloudngfwUntrustedSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVNetName'), variables('cloudngfwUntrustedSubnetName'))]",
        "cloudngfwTrustedSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVNetName'), variables('cloudngfwTrustedSubnetName'))]",
        "osDiskType": "StandardSSD_LRS"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('hubVNetName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('cloudngfwTrustedSubnetNSG'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('cloudngfwUntrustedSubnetNSG'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('hubVNetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('bastionSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('bastionSubnetAddressPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('cloudngfwUntrustedSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('cloudngfwUntrustedSubnetAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('cloudngfwUntrustedSubnetNSG'))]"
                            },
                            "delegations": [
                                {
                                    "name": "PaloAltoNetworks.Cloudngfw/firewalls",
                                    "properties": {
                                        "serviceName": "PaloAltoNetworks.Cloudngfw/firewalls"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "[variables('cloudngfwTrustedSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('cloudngfwTrustedSubnetAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('cloudngfwTrustedSubnetNSG'))]"
                            },
                            "delegations": [
                                {
                                    "name": "PaloAltoNetworks.Cloudngfw/firewalls",
                                    "properties": {
                                        "serviceName": "PaloAltoNetworks.Cloudngfw/firewalls"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('app1VNetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('app1VNetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('app1SubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('app1SubnetAddressPrefix')]",
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('app2VNetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('app2VNetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('app2SubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('app2SubnetAddressPrefix')]",
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "name": "[variables('app1nicname')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('app1VNetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('app1SubnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('app2nicname')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('app2VNetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('app2SubnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('cloudngfwUntrustedSubnetNSG')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-RDP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-HTTP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 400,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-HTTPS",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('cloudngfwTrustedSubnetNSG')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-RDP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-HTTP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 400,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-HTTPS",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[variables('bastionpublicIpAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[variables('cloudngfwpublicIpAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[variables('cloudngfwNATpublicIpAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "name": "[parameters('app1vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('app1nicname'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftVisualStudio",
                        "offer": "visualstudio2019latest",
                        "sku": "vs-2019-comm-latest-ws2019",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('app1nicname'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('app1vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                }
            }
        },
        {
            "name": "[parameters('app2vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('app2nicname'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftVisualStudio",
                        "offer": "visualstudio2019latest",
                        "sku": "vs-2019-comm-latest-ws2019",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('app2nicname'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('app2vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2020-05-01",
            "name": "[parameters('bastionHostName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "BastionIpConfiguration",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVNetName'), variables('bastionSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionpublicIpAddressName'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVNetName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionpublicIpAddressName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-07-01",
            "name": "app1vm/post-deploy",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "App deployment script for VM"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('app1vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.4",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[parameters('scriptUrl')]"
                    ],
                    "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File azure_powershell_install.ps1"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[format('{0}/{1}', parameters('hubVNetName'), format('{0}-{1}', parameters('hubVNetName'), parameters('app1VNetName')))]",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('app1VNetName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('app1VNetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVNetName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[format('{0}/{1}', parameters('app1VNetName'), format('{0}-{1}', parameters('app1VNetName'), parameters('hubVNetName')))]",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVNetName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('app1VNetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVNetName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[format('{0}/{1}', parameters('hubVNetName'), format('{0}-{1}', parameters('hubVNetName'), parameters('app2VNetName')))]",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('app2VNetName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('app2VNetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVNetName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[format('{0}/{1}', parameters('app2VNetName'), format('{0}-{1}', parameters('app2VNetName'), parameters('hubVNetName')))]",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVNetName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('app2VNetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVNetName'))]"
            ]
        }

    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}
